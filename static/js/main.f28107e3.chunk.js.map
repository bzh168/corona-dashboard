{"version":3,"sources":["constants.ts","helper.ts","sagas.ts","actions.ts","components/TableComponent.tsx","components/BarChart.tsx","components/PieChart.tsx","components/InfoFooter.tsx","components/TimeRangeSlider.tsx","container/Dashboard.tsx","index.tsx","reducer.ts"],"names":["FETCH_DATA_URL","ACTIONS","FETCH_DATA","GOT_DATA","GOT_META","SET_SELECTEDS","SET_TIME_Range","SET_SUM","FETCH_EVERY_HOUR","checkStatus","response","ok","Error","statusText","getData","url","options","Object","assign","credentials","fetch","catch","err","messge","then","fetchAndCheck","method","headers","Accept","json","useAppDispatch","useDispatch","useAppSelector","useSelector","getArrangedData","sagasFetchData","fetchEveryHour","watcher","getProperty","o","propertyName","sumDataOfFourTimeRanges","data","week_4","reduce","acc","curr","week_3","slice","week_2","week_1","arrangeDeaths","entries","map","item","deaths","history","itemInner","id","name","region","arrangeRecovered","recovered","groupDataByTimeRange","timeRange","cases","summerizeByProperty","array","property","summerize","call","replace","originalCases","tmpData","value","index","meta","put","type","payload","sum","delay","probe","select","state","getIn","lastUpdate","takeEvery","takeLatest","setSelecteds","ids","selecteds","descendingComparator","a","b","orderBy","getComparator","order","headCells","numeric","disablePadding","label","useStyles","makeStyles","root","width","th","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","TableComponent","classes","React","useState","setOrder","setOrderBy","get","undefined","dispatch","useEffect","Immutable","List","comparator","rows","toJS","Grid","container","className","spacing","direction","TableContainer","Table","aria-labelledby","aria-label","size","stickyHeader","TableHead","TableRow","TableCell","Checkbox","indeterminate","length","checked","onChange","event","target","i","inputProps","headCell","align","sortDirection","TableSortLabel","active","onClick","TableBody","sort","row","isItemSelected","includes","labelId","hover","rowId","newSelecteds","delete","indexOf","push","handleClick","role","aria-checked","tabIndex","selected","component","scope","CustomBarChart","casesActive","setCaseActive","deathsActive","setDeathsActive","recoveredActive","setRecoveredActive","showFullName","dataInJS","filter","color","dataKey","inactive","ResponsiveContainer","BarChart","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","labelFormatter","tmp","find","Legend","Bar","fill","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","textAnchor","dominantBaseline","toFixed","CustomPieChart","sums","currSums","getSumsOfSelecteds","unshift","tooltip","PieChart","Pie","entry","Cell","Array","from","keys","splice","InfoFooter","timeStamp","timeRangeLabel","useMemo","timeStampLable","Date","Typography","variant","toString","sliderContainer","display","slider","marginLeft","marginRight","TimeRangeSlider","Slider","track","parseInt","split","max","min","marks","newValue","setTimeRange","theme","appBar","zIndex","drawer","flexDirection","alignItems","paddingLeft","paddingRight","paddingTop","paddingBottom","justifyContent","appBarSpacer","mixins","toolbar","content","flexGrow","paper","fixedHeight","fixedHeight2","Dashboard","fixedHeightPaper1","clsx","fixedHeightPaper2","CssBaseline","AppBar","noWrap","Container","maxWidth","xs","md","lg","Paper","Box","pt","sagaMiddleware","createSagaMiddleware","store","createStore","Map","action","set","fromJS","composeWithDevTools","applyMiddleware","run","mySaga","render","document","getElementById"],"mappings":"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","file":"static/js/main.f28107e3.chunk.js","sourcesContent":["const ACTIONS = {\n  FETCH_DATA: 'FETCH_DATA',\n  GOT_DATA: 'GOT_DATA',\n  GOT_META: 'GOT_META',\n  SET_SELECTEDS: 'SET_SELECTEDS',\n  SET_TIME_Range: 'SET_TIME_Range',\n  SET_SUM: 'SET_SUM',\n  FETCH_EVERY_HOUR: 'FETCH_EVERY_HOUR',\n};\n\nexport const FETCH_DATA_URL = (\n  'https://api.corona-zahlen.org/states/history/pattern'\n);\n\nexport default ACTIONS;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './index';\n\nfunction checkStatus(response: any) {\n  if (response.ok) {\n    return response;\n  }\n  const error = new Error(response.statusText);\n  throw error;\n}\n\nexport function fetchAndCheck(url: string, options = {}) {\n  Object.assign(options, { credentials: 'same-origin' });\n\n  return fetch(url, options)\n    .catch((err) => {\n      throw new Error(err.messge);\n    })\n    .then(checkStatus);\n}\n\nexport function getData(url: string) {\n  const options = {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n    },\n  };\n  return fetchAndCheck(url, options).then((response) => response.json());\n}\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import {\n  call,\n  put,\n  select,\n  takeEvery,\n  takeLatest,\n  delay,\n} from 'redux-saga/effects';\nimport ACTIONS, { FETCH_DATA_URL } from './constants';\nimport { getData } from './helper';\n\n// index can be cases, deaths or recovered\ninterface Item {\n  [index: string]: number;\n}\n\ninterface Region {\n  id: number;\n  name: string;\n  history: Array<Item>;\n}\n\n// index can be BB, BE, BW ...\ninterface ResponseData {\n  [index: string]: Region;\n}\n\ninterface ResponseMeta {\n  contact: string;\n  info: string;\n  lastCheckedForUpdate: string;\n  lastUpdate: string;\n  source: string;\n}\n\ninterface Response {\n  data: ResponseData;\n  meta: ResponseMeta;\n}\n\ninterface DataGroupByWeek {\n  week_4: number;\n  week_3: number;\n  week_2: number;\n  week_1: number;\n}\n\ninterface ArrangedCases {\n  cases: DataGroupByWeek;\n  id: number;\n  name: string;\n  region: string;\n}\n\ninterface ArrangedData {\n  cases: DataGroupByWeek;\n  deaths: DataGroupByWeek;\n  recovered: DataGroupByWeek;\n  id: number;\n  name: string;\n  region: string;\n}\n\nexport interface SumOfOneTimeRange {\n  id: number;\n  name: string;\n  region: string;\n  cases: number;\n  deaths: number;\n  recovered: number;\n}\n\n// index can be week_1, week_2, week_3 or week_4\ninterface Sums {\n  [index: string]: SumOfOneTimeRange[];\n}\n\ntype WeekProperty = 'week_1' | 'week_2' | 'week_3' | 'week_4';\ntype ItemProperty = 'cases' | 'deaths' | 'recovered';\n\nfunction getProperty<T, K extends keyof T>(o: T, propertyName: K): T[K] {\n  return o[propertyName];\n}\n\nfunction sumDataOfFourTimeRanges(data: number[]): DataGroupByWeek {\n  return (\n    {\n      week_4: data.reduce((acc, curr) => acc + curr),\n      week_3: data.slice(7).reduce((acc, curr) => acc + curr),\n      week_2: data.slice(14).reduce((acc, curr) => acc + curr),\n      week_1: data.slice(21).reduce((acc, curr) => acc + curr),\n    }\n  );\n}\n\nfunction arrangeCases(response: Response) {\n  return Object.entries(response.data).map((item: [string, Region]) => ({\n    cases: sumDataOfFourTimeRanges(\n      item[1].history.map((itemInner) => itemInner.cases),\n    ),\n    id: item[1].id - 1,\n    name: item[1].name,\n    region: item[0],\n  }));\n}\n\nfunction arrangeDeaths(response: Response) {\n  return Object.entries(response.data).map((item: [string, Region]) => ({\n    deaths: sumDataOfFourTimeRanges(\n      item[1].history.map((itemInner) => itemInner.deaths),\n    ),\n    id: item[1].id - 1,\n    name: item[1].name,\n    region: item[0],\n  }));\n}\n\nfunction arrangeRecovered(response: Response) {\n  return Object.entries(response.data).map((item: [string, Region]) => ({\n    recovered: sumDataOfFourTimeRanges(\n      item[1].history.map((itemInner) => itemInner.recovered),\n    ),\n    id: item[1].id - 1,\n    name: item[1].name,\n    region: item[0],\n  }));\n}\n\nconst groupDataByTimeRange = (data: ArrangedData[], timeRange: WeekProperty) => (\n  data.map((item) => ({\n    id: item.id,\n    region: item.region,\n    name: item.name,\n    cases: getProperty(item.cases, timeRange),\n    deaths: getProperty(item.deaths, timeRange),\n    recovered: getProperty(item.recovered, timeRange),\n  })));\n\nconst summerizeByProperty = (array: SumOfOneTimeRange[], property: ItemProperty) => (\n  array.map(\n    (item: SumOfOneTimeRange) => getProperty(item, property),\n  ).reduce((acc, curr) => acc + curr)\n);\n\nconst summerize = (data: Sums, timeRange: WeekProperty) => ({\n  cases: summerizeByProperty(getProperty(data, timeRange), 'cases'),\n  deaths: summerizeByProperty(getProperty(data, timeRange), 'deaths'),\n  recovered: summerizeByProperty(getProperty(data, timeRange), 'recovered'),\n});\n\nfunction* getArrangedData() {\n  const originalCases: Response = yield call(\n    getData,\n    FETCH_DATA_URL.replace('pattern', 'cases/28'),\n  );\n  const cases = arrangeCases(originalCases);\n  const deaths = arrangeDeaths(\n    yield call(getData, FETCH_DATA_URL.replace('pattern', 'deaths/28')),\n  );\n  const recovered = arrangeRecovered(\n    yield call(getData, FETCH_DATA_URL.replace('pattern', 'recovered/28')),\n  );\n  const tmpData = cases.map(\n    (value: ArrangedCases, index: number) => (\n      { ...value, ...deaths[index], ...recovered[index] }\n    ),\n  );\n\n  return [\n    {\n      week_1: groupDataByTimeRange(tmpData, 'week_1'),\n      week_2: groupDataByTimeRange(tmpData, 'week_2'),\n      week_3: groupDataByTimeRange(tmpData, 'week_3'),\n      week_4: groupDataByTimeRange(tmpData, 'week_4'),\n    },\n    originalCases.meta,\n  ];\n}\n\nexport function* sagasFetchData() {\n  const [data, meta] : [Sums, ResponseMeta] = yield call(getArrangedData);\n  yield put({\n    type: ACTIONS.GOT_DATA,\n    payload: { data },\n  });\n  yield put({\n    type: ACTIONS.GOT_META,\n    payload: { meta },\n  });\n\n  const sum = {\n    week_1: summerize(data, 'week_1'),\n    week_2: summerize(data, 'week_2'),\n    week_3: summerize(data, 'week_3'),\n    week_4: summerize(data, 'week_4'),\n  };\n\n  yield put({\n    type: ACTIONS.SET_SUM,\n    payload: { sum },\n  });\n  yield put({\n    type: ACTIONS.FETCH_EVERY_HOUR,\n  });\n}\n\nexport function* fetchEveryHour() {\n  yield delay(3600000);\n  const probe: Response = yield call(\n    getData,\n    FETCH_DATA_URL.replace('pattern', 'cases/1'),\n  );\n  const lastUpdate: string = yield select((state) => (\n    state.getIn(['meta', 'lastUpdate'])\n  ));\n  if (probe.meta.lastUpdate !== lastUpdate) {\n    yield call(sagasFetchData);\n  }\n  yield put({\n    type: ACTIONS.FETCH_EVERY_HOUR,\n  });\n}\n\nexport default function* watcher() {\n  yield takeEvery(ACTIONS.FETCH_DATA, sagasFetchData);\n  yield takeLatest(ACTIONS.FETCH_EVERY_HOUR, fetchEveryHour);\n}\n","import Immutable from 'immutable';\nimport ACTIONS from './constants';\n\nexport function fetchData() {\n  return {\n    type: ACTIONS.FETCH_DATA,\n  };\n}\n\nexport function setSelecteds(ids: Immutable.List<number>) {\n  return {\n    type: ACTIONS.SET_SELECTEDS,\n    payload: {\n      selecteds: ids,\n    },\n  };\n}\n\nexport function setTimeRange(timeRange: string) {\n  return {\n    type: ACTIONS.SET_TIME_Range,\n    payload: {\n      timeRange,\n    },\n  };\n}\n","import React, { useEffect } from 'react';\nimport Immutable from 'immutable';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport { useAppSelector, useAppDispatch } from '../helper';\nimport { fetchData, setSelecteds } from '../actions';\nimport { SumOfOneTimeRange } from '../sagas';\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 1;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<T>(\n  order: Order,\n  orderBy: keyof T,\n): (a: T, b: T) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  return array.sort((a, b) => comparator(a, b));\n}\n\ninterface HeadCell {\n  id: keyof SumOfOneTimeRange;\n  numeric: boolean;\n  disablePadding: boolean;\n  label: string;\n}\n\nconst headCells: HeadCell[] = [\n  {\n    id: 'name', numeric: false, disablePadding: true, label: 'Region',\n  },\n  {\n    id: 'cases', numeric: true, disablePadding: false, label: 'Cases',\n  },\n  {\n    id: 'deaths', numeric: true, disablePadding: false, label: 'Deaths',\n  },\n  {\n    id: 'recovered', numeric: true, disablePadding: false, label: 'Recovered',\n  },\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n  },\n  th: {\n    'padding-left': 0,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function TableComponent() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof SumOfOneTimeRange>('region');\n  const timeRange = useAppSelector((state) => state.get('timeRange')) as string;\n  const data = useAppSelector((state) => (\n    state.getIn(['data', timeRange], undefined)\n  ));\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchData());\n  }, []);\n\n  const selecteds: any = useAppSelector((state) => (\n    state.get('selecteds', Immutable.List())\n  ));\n\n  if (!data) {\n    return null;\n  }\n\n  const rows: SumOfOneTimeRange[] = data.toJS();\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof SumOfOneTimeRange,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      if (selecteds.size !== rows.length && selecteds.size !== 0) {\n        dispatch(setSelecteds(Immutable.List()));\n        return;\n      }\n      dispatch(setSelecteds(Immutable.List(rows.map((i) => i.id))));\n    } else {\n      dispatch(setSelecteds(Immutable.List()));\n    }\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, rowId: number) => {\n    const newSelecteds = selecteds.includes(rowId)\n      ? selecteds.delete(selecteds.indexOf(rowId))\n      : selecteds.push(rowId);\n    dispatch(setSelecteds(newSelecteds));\n  };\n\n  return (\n    <Grid container className={classes.root} spacing={1} direction=\"column\">\n      <TableContainer>\n        <Table\n          aria-labelledby=\"tableTitle\"\n          aria-label=\"enhanced table\"\n          size=\"small\"\n          stickyHeader\n        >\n          <TableHead>\n            <TableRow>\n              <TableCell className={classes.th}>\n                <Checkbox\n                  indeterminate={\n                    selecteds.size > 0 && selecteds.size < rows.length\n                  }\n                  checked={rows.length > 0 && selecteds.size === rows.length}\n                  onChange={handleSelectAllClick}\n                  inputProps={{ 'aria-label': 'select all desserts' }}\n                  size=\"small\"\n                />\n              </TableCell>\n              {headCells.map((headCell) => (\n                <TableCell\n                  className={classes.th}\n                  key={headCell.id}\n                  align={headCell.numeric ? 'right' : 'left'}\n                  padding={headCell.disablePadding ? 'none' : 'default'}\n                  sortDirection={orderBy === headCell.id ? order : false}\n                >\n                  <TableSortLabel\n                    active={orderBy === headCell.id}\n                    direction={orderBy === headCell.id ? order : 'asc'}\n                    onClick={(event) => handleRequestSort(event, headCell.id)}\n                  >\n                    {headCell.label}\n                    {orderBy === headCell.id ? (\n                      <span className={classes.visuallyHidden}>\n                        {order === 'desc'\n                          ? 'sorted descending'\n                          : 'sorted ascending'}\n                      </span>\n                    ) : null}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {stableSort(rows, getComparator(order, orderBy)).map((row) => {\n              const isItemSelected = selecteds.includes(row.id);\n              const labelId = `enhanced-table-checkbox-${row.id}`;\n\n              return (\n                <TableRow\n                  hover\n                  onClick={(event) => handleClick(event, row.id)}\n                  role=\"checkbox\"\n                  aria-checked={isItemSelected}\n                  tabIndex={-1}\n                  key={row.id}\n                  selected={isItemSelected}\n                >\n                  <TableCell className={classes.th}>\n                    <Checkbox\n                      checked={isItemSelected}\n                      inputProps={{ 'aria-labelledby': labelId }}\n                      size=\"small\"\n                    />\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    id={labelId}\n                    scope=\"row\"\n                    padding=\"none\"\n                  >\n                    {row.name}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.cases}</TableCell>\n                  <TableCell align=\"right\">{row.deaths}</TableCell>\n                  <TableCell align=\"right\">{row.recovered}</TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Grid>\n  );\n}\n","import React, { useState } from 'react';\nimport Immutable from 'immutable';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport { useAppSelector } from '../helper';\nimport { SumOfOneTimeRange } from '../sagas';\n\nexport default function CustomBarChart() {\n  const timeRange = useAppSelector((state) => state.get('timeRange')) as string;\n  const data = useAppSelector((state) => (\n    state.getIn(['data', timeRange], undefined)\n  ));\n  const selecteds: any = useAppSelector((state) => (\n    state.get('selecteds', Immutable.List())\n  ));\n\n  const [casesActive, setCaseActive] = useState(true);\n  const [deathsActive, setDeathsActive] = useState(true);\n  const [recoveredActive, setRecoveredActive] = useState(true);\n\n  if (!data) {\n    return null;\n  }\n\n  const showFullName = (\n    !!(selecteds.size < 7 && selecteds.size !== 0)\n  );\n\n  const dataInJS: SumOfOneTimeRange[] = (\n    !selecteds || selecteds.size === 0\n      ? data.toJS()\n      : data.filter((item: any) => selecteds.includes(item.get('id'))).toJS()\n  );\n\n  const handleClickOnLegend = (event: any) => {\n    switch (event.dataKey) {\n      case 'cases': {\n        setCaseActive(!casesActive);\n        break;\n      }\n      case 'deaths': {\n        setDeathsActive(!deathsActive);\n        break;\n      }\n      case 'recovered': {\n        setRecoveredActive(!recoveredActive);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  };\n\n  const payload: any[] = [\n    {\n      color: '#8884d8',\n      dataKey: 'cases',\n      inactive: !casesActive,\n      type: 'rect',\n      value: 'cases',\n    },\n    {\n      color: 'red',\n      dataKey: 'deaths',\n      inactive: !deathsActive,\n      type: 'rect',\n      value: 'deaths',\n    },\n    {\n      color: '#82ca9d',\n      dataKey: 'recovered',\n      inactive: !recoveredActive,\n      type: 'rect',\n      value: 'recovered',\n    },\n  ];\n\n  const labelFormatter = (label: string) => {\n    const tmp = dataInJS.find((item) => item.region === label);\n    return tmp ? tmp.name : null;\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <BarChart\n        width={500}\n        height={300}\n        data={dataInJS}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey={showFullName ? 'name' : 'region'} />\n        <YAxis />\n        {showFullName ? (\n          <Tooltip />\n        ) : (\n          <Tooltip labelFormatter={labelFormatter} />\n        )}\n        <Legend onClick={handleClickOnLegend} payload={payload} />\n        {casesActive ? <Bar dataKey=\"cases\" fill=\"#8884d8\" /> : null}\n        {deathsActive ? <Bar dataKey=\"deaths\" fill=\"red\" /> : null}\n        {recoveredActive ? <Bar dataKey=\"recovered\" fill=\"#82ca9d\" /> : null}\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n","import React from 'react';\nimport Immutable from 'immutable';\nimport {\n  PieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport { useAppSelector, useAppDispatch } from '../helper';\nimport { setSelecteds } from '../actions';\nimport { SumOfOneTimeRange } from '../sagas';\n\nconst COLORS = [\n  '#2196f3',\n  '#e91e63',\n  '#ff9800',\n  '#673ab7',\n  '#3f51b5',\n  '#ffeb3b',\n  '#f44336',\n  '#ffc107',\n  '#009688',\n  '#9c27b0',\n  '#8bc34a',\n  '#cddc39',\n  '#00bcd4',\n  '#ff5722',\n  '#03a9f4',\n  '#4caf50',\n];\n\nconst getSumsOfSelecteds = (data: SumOfOneTimeRange[]) => (\n  data.reduce(\n    (acc, curr) => ({\n      cases: acc.cases + curr.cases,\n      deaths: acc.deaths + curr.deaths,\n      recovered: acc.recovered + curr.recovered,\n    }),\n    {\n      cases: 0,\n      deaths: 0,\n      recovered: 0,\n    },\n  ));\n\nconst RADIAN = Math.PI / 180;\n\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n}: any) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 1.3;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"black\"\n      textAnchor={x > cx ? 'start' : 'end'}\n      dominantBaseline=\"central\"\n    >\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nexport default function CustomPieChart() {\n  const dispatch = useAppDispatch();\n  const timeRange = useAppSelector((state) => state.get('timeRange')) as string;\n  const data = useAppSelector((state) => (\n    state.getIn(['data', timeRange], undefined)\n  ));\n  const selecteds = useAppSelector((state) => (\n    state.get('selecteds', Immutable.List())\n  )) as any;\n\n  const sums = useAppSelector((state) => (\n    state.getIn(['sum', timeRange], undefined)\n  ));\n\n  if (!data) {\n    return null;\n  }\n\n  const dataInJS: SumOfOneTimeRange[] = !selecteds || selecteds.size === 0\n    ? data.toJS()\n    : data.filter((item: any) => selecteds.includes(item.get('id'))).toJS();\n\n  if (selecteds.size !== 0) {\n    const currSums = getSumsOfSelecteds(dataInJS);\n    dataInJS.unshift({\n      id: 20,\n      name: 'others',\n      region: 'other',\n      cases: sums.get('cases') - currSums.cases,\n      deaths: sums.get('deaths') - currSums.deaths,\n      recovered: sums.get('recovered') - currSums.recovered,\n    });\n  }\n\n  const payload: any[] = dataInJS.map((item, index) => ({\n    color: COLORS[index],\n    inactive: false,\n    type: 'rect',\n    value: item.name,\n    id: item.id,\n    tooltip: 'click to remove',\n  }));\n\n  const handleClickOnLegend = (event: any) => {\n    if (event.id === 20) {\n      return;\n    }\n    if (selecteds.size === 0) {\n      const tmp = Array.from(Array(16).keys());\n      tmp.splice(event.id, 1);\n      dispatch(setSelecteds(Immutable.List(tmp)));\n    } else {\n      dispatch(setSelecteds(selecteds.delete(selecteds.indexOf(event.id))));\n    }\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <PieChart width={400} height={400}>\n        <text x=\"5%\" y=\"6%\" fill=\"#8884d8\">\n          Cases:\n        </text>\n        <Pie\n          data={dataInJS}\n          cx=\"20%\"\n          cy=\"50%\"\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"cases\"\n          label={renderCustomizedLabel}\n        >\n          {dataInJS.map((entry, index) => (\n            <Cell key={`cell-${entry.id}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <text x=\"35%\" y=\"6%\" fill=\"red\">\n          Deaths:\n        </text>\n        <Pie\n          data={dataInJS}\n          cx=\"50%\"\n          cy=\"50%\"\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"deaths\"\n          label={renderCustomizedLabel}\n        >\n          {dataInJS.map((entry, index) => (\n            <Cell key={`cell-${entry.id}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <text x=\"65%\" y=\"6%\" fill=\"#82ca9d\">\n          Recovered:\n        </text>\n        <Pie\n          data={dataInJS}\n          cx=\"80%\"\n          cy=\"50%\"\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"recovered\"\n          label={renderCustomizedLabel}\n        >\n          {dataInJS.map((entry, index) => (\n            <Cell key={`cell-${entry.id}`} fill={COLORS[index]} />\n          ))}\n        </Pie>\n        <Tooltip />\n        <Legend payload={payload} onClick={handleClickOnLegend} />\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n","import React, { useMemo } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { useAppSelector } from '../helper';\n\nexport default function InfoFooter() {\n  const timeRange = useAppSelector((state) => state.get('timeRange')) as string;\n  const sums = useAppSelector((state) => (\n    state.getIn(['sum', timeRange], undefined)\n  ));\n  const timeStamp = useAppSelector((state) => state.getIn(['meta', 'lastUpdate']));\n\n  const timeRangeLabel = useMemo(() => {\n    if (timeRange) {\n      return timeRange === 'week_1'\n        ? 'In last week'\n        : `In past ${timeRange.slice(-1)} weeks`;\n    }\n    return null;\n  }, [timeRange]);\n\n  const timeStampLable = useMemo(() => new Date(timeStamp), [timeStamp]);\n\n  if (!sums) {\n    return null;\n  }\n\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      <span>\n        {timeRangeLabel}\n        , there are\n        {' '}\n      </span>\n      <span>\n        {sums.get('cases')}\n        {' '}\n        cases,\n        {' '}\n      </span>\n      <span>\n        {sums.get('deaths')}\n        {' '}\n        deaths,\n        {' '}\n      </span>\n      <span>\n        {sums.get('recovered')}\n        {' '}\n        recovereds in Germany.\n        {' '}\n      </span>\n      <br />\n      <span>\n        Updated:\n        {timeStampLable.toString()}\n      </span>\n    </Typography>\n  );\n}\n","import React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { setTimeRange } from '../actions';\nimport { useAppSelector, useAppDispatch } from '../helper';\n\nconst useStyles = makeStyles(() => ({\n  sliderContainer: {\n    display: 'flex',\n  },\n  slider: {\n    marginLeft: 'auto',\n    marginRight: '5%',\n    width: '60%',\n  },\n}));\n\nexport default function TimeRangeSlider() {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n  const timeRange = useAppSelector((state) => state.get('timeRange'));\n\n  const handleChange = (event: any, newValue: number | number[]) => {\n    if ((newValue !== 4) && typeof newValue === 'number') {\n      dispatch(setTimeRange(`week_${4 - newValue}`));\n    }\n  };\n\n  return (\n    <div className={classes.sliderContainer}>\n      <Slider\n        className={classes.slider}\n        track=\"inverted\"\n        value={\n          (typeof timeRange === 'string') ? (\n            4 - parseInt(timeRange.split('_')[1], 10)) : 3\n        }\n        max={4}\n        min={0}\n        marks={[\n          { value: 0, label: '4 weeks' },\n          { value: 1, label: '3 weeks' },\n          { value: 2, label: '2 weeks' },\n          { value: 3, label: '1 week' },\n          { value: 4, label: 'Now' },\n        ]}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TableComponent from '../components/TableComponent';\nimport BarChart from '../components/BarChart';\nimport PieChart from '../components/PieChart';\nimport InfoFooter from '../components/InfoFooter';\nimport TimeRangeSlider from '../components/TimeRangeSlider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 10,\n    paddingBottom: 10,\n    justifyContent: 'space-between',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 400,\n  },\n  fixedHeight2: {\n    height: 750,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const fixedHeightPaper1 = clsx(classes.paper, classes.fixedHeight);\n  const fixedHeightPaper2 = clsx(classes.paper, classes.fixedHeight2);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={classes.appBar}>\n        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap>\n          Corona-Dashboard\n        </Typography>\n      </AppBar>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"xl\" className={classes.container}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} md={5} lg={5}>\n              <Paper>\n                <TimeRangeSlider />\n              </Paper>\n              <Paper className={fixedHeightPaper2}>\n                <TableComponent />\n              </Paper>\n            </Grid>\n            <Grid item xs={12} md={7} lg={7}>\n              <Paper className={fixedHeightPaper1}>\n                <BarChart />\n              </Paper>\n              <Paper className={fixedHeightPaper1}>\n                <PieChart />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={2}>\n            <InfoFooter />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport Immutable from 'immutable';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from './reducer';\nimport mySaga from './sagas';\nimport Dashboard from './container/Dashboard';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  reducer,\n  Immutable.Map({\n    meta: {},\n    timeRange: 'week_1',\n  }),\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\nsagaMiddleware.run(mySaga);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nrender(\n  <Provider store={store}>\n    <Dashboard />\n  </Provider>,\n  document.getElementById('root'),\n);\n","import { AnyAction } from 'redux';\nimport Immutable from 'immutable';\nimport ACTIONS from './constants';\n\nexport default function reducer(state = Immutable.Map(), action: AnyAction) {\n  switch (action.type) {\n    case ACTIONS.GOT_DATA: {\n      return state.set('data', Immutable.fromJS(action.payload.data));\n    }\n    case ACTIONS.GOT_META: {\n      return state.set('meta', Immutable.fromJS(action.payload.meta));\n    }\n    case ACTIONS.SET_SELECTEDS: {\n      return state.set('selecteds', action.payload.selecteds);\n    }\n    case ACTIONS.SET_TIME_Range: {\n      return state.set('timeRange', action.payload.timeRange);\n    }\n    case ACTIONS.SET_SUM: {\n      return state.set('sum', Immutable.fromJS(action.payload.sum));\n    }\n    default: {\n      return state;\n    }\n  }\n}\n"],"sourceRoot":""}